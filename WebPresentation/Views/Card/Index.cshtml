@model IEnumerable<DataObjects.Card>

@{
    ViewBag.Title = "Index";
}

<h2>Cards List</h2>

@if (User.IsInRole("Judge"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}
<div class="table-responsive">
    <table id="cardListTable" class="display table table-bordered table-condensed table-striped table-hover">
        @if (Model.Count() == 0)
        {
            <thead>
                <tr>
                    <td colspan="10">No Record's found.</td>
                </tr>
            </thead>

        }
        else
        {
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.CardName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CardCategory)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CardType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MonsterType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MonsterSubType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MonsterAttribute)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LevelRank)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Attack)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Defense)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PendulumScale)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LinkNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BanlistPlacement)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CardText)
                    </th>
                    <th></th>
                </tr>
            </thead>

            foreach (var item in Model)
            {
                <tbody>
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CardName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CardCategory)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CardType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MonsterType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MonsterSubType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MonsterAttribute)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LevelRank)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Attack)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Defense)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PendulumScale)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LinkNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BanlistPlacement)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CardText)
                        </td>

                        @if (User.IsInRole("Judge"))
                        {
                            <td>
                                @Html.ActionLink("Edit", "Edit", "Card", new { cardName = item.CardName }, null)
                                @Html.ActionLink("Delete", "Delete", new { cardName = item.CardName }, null)
                            </td>
                        }
                    </tr>
                </tbody>
            }
        }
    </table>
</div>
